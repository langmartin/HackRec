#+TITLE:     hackrec
#+AUTHOR:    Lang Martin
#+EMAIL:     lang.martin@gmail.com
#+ARCHIVE:   doc/hackrec-1.org::
#+OPTIONS:   H:3 num:nil toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+COLUMNS:   %20ITEM(Class) %12SCHEDULED(Date)

This repository contains a library defining sentences as used by the
Berkely CS61A Lecture series and the working file for each hackrec
class.

* 13 SICP 2.1.3+
SCHEDULED: <2012-02-20 Mon>

** Section 2.1.3
*** Exercise 2.4

Peek at the notes from class 12 if you like.

*** Exercise 2.5

Any positive power of 2 is even, and any positive power of 3 is odd.

*** Exercise 2.6

Don't spend way too much time on this, it's cool but not critical to
your education. Try just doing copy and paste to add-1 to zero, but
then trace that through and reduce the definition of one. Reduce two
the same way, it clarifies the idea a lot.

From the solutions site:

: If you wonder how to use these functions here are few examples..
: ((one square) 2)
: ((two square) 2)
: (((add two one) square) 2)

** Skip Section 2.1.4

This is an extended exercise which is interesting abstraction
practice, and does involve some nice specific cases. It's also a lot
of math, and everything will still make sense moving forward.

** Section 2.2.1
*** Exercise 2.17
*** Exercise 2.18
*** Exercise 2.19
*** Exercise 2.20

In which we finally learn how to define Jacob's fancy =avg= procedure.

* Links

See [[file:doc/hackrec-1.org][The Schedule]] for old classes and notes on the exercises.

+ SICP :: http://mitpress.mit.edu/sicp/full-text/book/book.html
+ SICP Solutions :: http://community.schemewiki.org/?sicp-solutions
+ CS61A :: http://webcast.berkeley.edu/playlist#c,s,Spring_2008,6879A8466C44A5D5

A couple of comments/propaganda about CS61A (you don't need to read these):
http://www.cs.berkeley.edu/~bh/61a.html
http://wla.berkeley.edu/~cs61a/su11/CS61A_General_Info_Su2011.pdf
