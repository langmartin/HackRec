#+TITLE:     hackrec Notes
#+AUTHOR:    Lang Martin
#+EMAIL:     lang.martin@gmail.com
#+OPTIONS:   H:3 num:nil toc:t \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+COLUMNS:   %20ITEM(Class) %12SCHEDULED(Date)

This repository contains a library defining setences as used by the
Berkely CS61A Lecture series and the working file for each hackrec
class.

* Schedule (Next [[07 SICP 1.2.4]])
** 00 Introduction
   SCHEDULED: <2011-11-07 Mon>

** 01 SICP 1.1.1
   SCHEDULED: <2011-11-14 Mon>

** 02 SICP 1.1.1 and string-reverse
   SCHEDULED: <2011-11-21 Mon>

** 03 CS61A Lectures 1-3
   SCHEDULED: <2011-12-05 Mon>
   Introduced [[file:sentences.scm][sentences]].
   In class, we did reverse (for sentences and words) both recursively
   and iteratively.

** 04 SICP 1.2.1, 1.2.2
   SCHEDULED: <2011-12-12 Mon>
   Fibonacci, recursively and iteratively.

** 05 SICP 1.2.3
   SCHEDULED: <2011-12-19 Mon>

*** Exercise 1.12
    Pascal's triangle and algorithmic growth. Our solution in class
    was kind of weird, we were supposed to come up with a purely
    numeric approach that grew in both directions. I used sentences to
    simplify the problem, so our version is faster than the intended
    solution. The intended solution is this one:
    http://community.schemewiki.org/?sicp-ex-1.12

** 06 SICP 1.2.3
   SCHEDULED: <2011-12-27 Tue>

*** Exercise 1.14
    The count-change procedure and algorithmic growth.

    A couple of comments on figuring out the O growth for this
    function:

    1) I did it incorrectly the first time, don't get discouraged.
    2) It's important to understand the common growth patterns, n,
       n^2, log n and n log n, but it's ok to let the details slip.
    3) The function on each input number to figure out how many
       pennies should be returned, on n/5 for nickles, n/10 for dimes,
       etc.

** 07 SICP 1.2.4
   SCHEDULED: <2012-01-02 Mon>

   fast-exponent and fast-multiply.
   This section is interesting because we solve the problem two
   different ways (twice), and the second way takes fewer steps.

*** Exercise 1.16

*** Exercise 1.17
    See the bottom of [[file:06-count-change.scm][06-count-change.scm]], we started discussing this
    at the end of class 6.

*** Exercise 1.18

** SICP 1.2.5
*** Exercise 1.20

** SICP 1.2.6
*** Exercise 1.21
*** Exercise 1.22
*** Exercise 1.25
*** Exercise 1.26
